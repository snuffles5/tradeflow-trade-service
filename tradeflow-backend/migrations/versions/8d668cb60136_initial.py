"""initial

Revision ID: 8d668cb60136
Revises:
Create Date: 2025-05-19 21:55:40.786369

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "8d668cb60136"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "last_price_info",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ticker", sa.String(length=20), nullable=False),
        sa.Column("last_price", sa.Float(), nullable=True),
        sa.Column("change_today", sa.Float(), nullable=True),
        sa.Column("change_today_percentage", sa.Float(), nullable=True),
        sa.Column("market_identifier", sa.String(length=50), nullable=True),
        sa.Column("provider_source", sa.String(length=50), nullable=True),
        sa.Column("last_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_last_price_info_ticker"), "last_price_info", ["ticker"], unique=True
    )
    op.create_table(
        "trade_owners",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "trade_sources",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "source_owner_association",
        sa.Column("source_id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["trade_owners.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["trade_sources.id"],
        ),
        sa.PrimaryKeyConstraint("source_id", "owner_id"),
    )
    op.create_table(
        "unrealized_holdings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ticker", sa.String(length=10), nullable=False),
        sa.Column("trade_owner_id", sa.Integer(), nullable=False),
        sa.Column("trade_source_id", sa.Integer(), nullable=False),
        sa.Column("net_quantity", sa.Float(), nullable=False),
        sa.Column("average_cost", sa.Float(), nullable=False),
        sa.Column("net_cost", sa.Float(), nullable=False),
        sa.Column("latest_trade_price", sa.Float(), nullable=False),
        sa.Column("open_date", sa.DateTime(), nullable=False),
        sa.Column("close_date", sa.DateTime(), nullable=True),
        sa.Column("stop_loss", sa.Float(), nullable=True),
        sa.Column("realized_pnl", sa.Float(), nullable=True),
        sa.Column("realized_pnl_percentage", sa.Float(), nullable=True),
        sa.Column("total_buy_quantity", sa.Float(), nullable=True),
        sa.Column("total_buy_cost", sa.Float(), nullable=True),
        sa.Column("total_sell_quantity", sa.Float(), nullable=True),
        sa.Column("total_sell_value", sa.Float(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["trade_owner_id"],
            ["trade_owners.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trade_source_id"],
            ["trade_sources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trades",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_type", sa.String(length=10), nullable=True),
        sa.Column("ticker", sa.String(length=10), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("price_per_unit", sa.Float(), nullable=False),
        sa.Column("trade_date", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("trade_owner_id", sa.Integer(), nullable=False),
        sa.Column("trade_source_id", sa.Integer(), nullable=False),
        sa.Column("holding_id", sa.Integer(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["holding_id"],
            ["unrealized_holdings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trade_owner_id"],
            ["trade_owners.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trade_source_id"],
            ["trade_sources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trades")
    op.drop_table("unrealized_holdings")
    op.drop_table("source_owner_association")
    op.drop_table("trade_sources")
    op.drop_table("trade_owners")
    op.drop_index(op.f("ix_last_price_info_ticker"), table_name="last_price_info")
    op.drop_table("last_price_info")
    # ### end Alembic commands ###
